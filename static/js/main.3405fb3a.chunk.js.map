{"version":3,"sources":["components/Timer/Timer.jsx","components/TimerRxJS/TimerRxJS.jsx","App.js","reportWebVitals.js","index.js","components/Timer/Timer.module.scss","components/TimerRxJS/TimerRxJS.module.scss"],"names":["Timer","useState","seconds","setSeconds","minutes","setMinutes","hours","setHours","isActive","setIsActive","counter","setCounter","waitCounter","setWaitCounter","isActiveWait","setIsActiveWait","amountClick","setAmountClick","useEffect","intervalBetweenClicks","setInterval","clearInterval","timerInterval","secondsCounter","Math","floor","minutesCounter","hoursCounter","calculatedSeconds","String","length","calculatedMinutes","calculatedHours","className","styles","Wrapper","Title","Item","ControlPanel","ButtonStart","onClick","ButtonStop","ButtonWait","ButtonReset","TimerRxJS","stream$","Subject","interval","pipe","takeUntil","subscribe","next","complete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3405fb3a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './Timer.module.scss';\r\n\r\nconst Timer = () => {\r\n\r\n  const TIME_BETWEEN_CLICKS = 300;\r\n\r\n  //State for timer\r\n  const [seconds, setSeconds] = useState('00');\r\n  const [minutes, setMinutes] = useState('00');\r\n  const [hours, setHours] = useState('00');\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  // State for wait between clicks\r\n  const [waitCounter, setWaitCounter] = useState(0);\r\n  const [isActiveWait, setIsActiveWait] = useState(false);\r\n  const [amountClick, setAmountClick] = useState(0);\r\n\r\n  const handleStart = () => {\r\n      setIsActive(true);\r\n  }\r\n  const handleStop = () => {\r\n      setIsActive(false);\r\n      setIsActiveWait(false);\r\n      setWaitCounter(0);\r\n      setCounter(0);\r\n      setSeconds('00');\r\n      setMinutes('00');\r\n      setHours('00');\r\n  }\r\n\r\n  const handleWait = () => {\r\n    setAmountClick(amountClick => amountClick + 1)\r\n    if (amountClick >= 1 && waitCounter < TIME_BETWEEN_CLICKS) {\r\n      setIsActive(false);\r\n    }\r\n    setIsActiveWait(true);\r\n  }\r\n  const handleReset = () => {\r\n    setCounter(0);\r\n    setSeconds('00');\r\n    setMinutes('00');\r\n    setHours('00');\r\n    setIsActive(true)\r\n  }\r\n\r\n  // Interval between clicks\r\n  useEffect(() => {\r\n    let intervalBetweenClicks;\r\n    if (isActiveWait) {\r\n      intervalBetweenClicks = setInterval(() => {\r\n        setWaitCounter(waitCounter => waitCounter + 10);\r\n        if (waitCounter > TIME_BETWEEN_CLICKS) {\r\n          setWaitCounter(0);\r\n          setAmountClick(0);\r\n        } \r\n      }, 10)\r\n    }\r\n    return () => clearInterval(intervalBetweenClicks);\r\n  }, [isActiveWait, waitCounter, amountClick])\r\n\r\n  // Timer interval\r\n  useEffect(() => {\r\n    let timerInterval;\r\n    if (isActive) {\r\n      timerInterval = setInterval(() => {\r\n        const secondsCounter = Math.floor(counter % 3600 % 60);\r\n        const minutesCounter = Math.floor(counter % 3600 / 60);\r\n        const hoursCounter = Math.floor(counter / 3600);\r\n        const calculatedSeconds = String(secondsCounter).length === 1 ? `0${secondsCounter}`: secondsCounter;\r\n        const calculatedMinutes = String(minutesCounter).length === 1 ? `0${minutesCounter}`: minutesCounter;\r\n        const calculatedHours = String(hoursCounter).length === 1 ? `0${hoursCounter}`: hoursCounter;\r\n        setSeconds(calculatedSeconds);\r\n        setMinutes(calculatedMinutes);\r\n        setHours(calculatedHours);\r\n        setCounter(counter => counter + 1);\r\n      }, 1000)\r\n    }\r\n    return () => clearInterval(timerInterval);\r\n  }, [isActive, counter])\r\n\r\n  return (\r\n    <div className={styles.Wrapper}>\r\n        <h2 className={styles.Title}>Timer React</h2>\r\n        <div className={styles.Timer}>\r\n            <div className={styles.Item}>\r\n                <p>{hours}</p>\r\n                <h2>Hours</h2>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <p>{minutes}</p>\r\n                <h2>Minutes</h2>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <p>{seconds}</p>\r\n                <h2>Seconds</h2>\r\n            </div>\r\n        </div>\r\n        <div className={styles.ControlPanel}>\r\n          <div >\r\n            <button className={styles.ButtonStart} onClick={handleStart}>Start</button>\r\n          </div>\r\n          <div>\r\n            <button className={styles.ButtonStop} onClick={handleStop}>Stop</button>\r\n          </div>\r\n          <div>\r\n            <button className={styles.ButtonWait} onClick={handleWait}>Wait</button>\r\n          </div>\r\n          <div>\r\n            <button className={styles.ButtonReset} onClick={handleReset}>Reset</button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { interval, Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport styles from './TimerRxJS.module.scss';\r\n  \r\nconst TimerRxJS = () => {\r\n\r\n  const TIME_BETWEEN_CLICKS = 300;\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  const [seconds, setSeconds] = useState('00');\r\n  const [minutes, setMinutes] = useState('00');\r\n  const [hours, setHours] = useState('00');\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n   // State for wait between clicks\r\n   const [waitCounter, setWaitCounter] = useState(0);\r\n   const [isActiveWait, setIsActiveWait] = useState(false);\r\n   const [amountClick, setAmountClick] = useState(0);\r\n\r\n     // Interval between clicks\r\n  useEffect(() => {\r\n    const stream$ = new Subject();\r\n    interval(10)\r\n      .pipe(takeUntil(stream$))\r\n      .subscribe(() => {\r\n        setWaitCounter(waitCounter => waitCounter + 10);\r\n        if (waitCounter > TIME_BETWEEN_CLICKS) {\r\n          setWaitCounter(0);\r\n          setAmountClick(0);\r\n        } \r\n      })\r\n      return () => {\r\n        stream$.next();\r\n        stream$.complete();\r\n      };\r\n  }, [isActiveWait, waitCounter, amountClick])\r\n \r\n  useEffect(() => {\r\n    const stream$ = new Subject();\r\n    interval(1000)\r\n      .pipe(takeUntil(stream$))\r\n      .subscribe(() => {\r\n        if (isActive) {\r\n          const secondsCounter = Math.floor(counter % 3600 % 60);\r\n          const minutesCounter = Math.floor(counter % 3600 / 60);\r\n          const hoursCounter = Math.floor(counter / 3600);\r\n          const calculatedSeconds = String(secondsCounter).length === 1 ? `0${secondsCounter}`: secondsCounter;\r\n          const calculatedMinutes = String(minutesCounter).length === 1 ? `0${minutesCounter}`: minutesCounter;\r\n          const calculatedHours = String(hoursCounter).length === 1 ? `0${hoursCounter}`: hoursCounter;\r\n          setSeconds(calculatedSeconds);\r\n          setMinutes(calculatedMinutes);\r\n          setHours(calculatedHours);\r\n          setCounter(counter => counter + 1);\r\n        }\r\n      });\r\n    return () => {\r\n      stream$.next();\r\n      stream$.complete();\r\n    };\r\n  }, [isActive, counter]);\r\n\r\n  const handleStart = () => {\r\n    setIsActive(true);\r\n  };\r\n \r\n  const handleStop = () => {\r\n    setIsActive(false);\r\n    setCounter(0);\r\n    setSeconds('00')\r\n  };\r\n \r\n  const handleReset = () => {\r\n    setCounter(0);\r\n    setIsActive(true);\r\n  };\r\n\r\n  const handleWait = () => {\r\n    setAmountClick(amountClick => amountClick + 1)\r\n    if (amountClick >= 1 && waitCounter < TIME_BETWEEN_CLICKS) {\r\n      setIsActive(false);\r\n    }\r\n    setIsActiveWait(true);\r\n  }\r\n  \r\n  return (\r\n        <div className={styles.Wrapper}>\r\n        <h2 className={styles.Title}>Timer React + RxJS</h2>\r\n        <div className={styles.Timer}>\r\n            <div className={styles.Item}>\r\n                <p>{hours}</p>\r\n                <h2>Hours</h2>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <p>{minutes}</p>\r\n                <h2>Minutes</h2>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <p>{seconds}</p>\r\n                <h2>Seconds</h2>\r\n            </div>\r\n        </div>\r\n        <div className={styles.ControlPanel}>\r\n          <div >\r\n            <button className={styles.ButtonStart} onClick={handleStart}>Start</button>\r\n          </div>\r\n          <div>\r\n            <button className={styles.ButtonStop} onClick={handleStop}>Stop</button>\r\n          </div>\r\n          <div>\r\n            <button className={styles.ButtonWait} onClick={handleWait}>Wait</button>\r\n          </div>\r\n          <div>\r\n            <button className={styles.ButtonReset} onClick={handleReset}>Reset</button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerRxJS;\r\n\r\n","import Timer from './components/Timer/Timer';\r\nimport TimerRxJS from './components/TimerRxJS/TimerRxJS';\r\nimport './index.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Timer />\r\n      <TimerRxJS />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Timer_Wrapper__13V22\",\"Title\":\"Timer_Title__2gZOn\",\"Timer\":\"Timer_Timer__3-J4q\",\"Item\":\"Timer_Item__1MsGD\",\"ControlPanel\":\"Timer_ControlPanel__1IGOs\",\"ButtonStart\":\"Timer_ButtonStart__1Z2VZ\",\"ButtonStop\":\"Timer_ButtonStop__j7_jG\",\"ButtonWait\":\"Timer_ButtonWait__tvOG7\",\"ButtonReset\":\"Timer_ButtonReset__1le6c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"TimerRxJS_Wrapper__3PuKh\",\"Title\":\"TimerRxJS_Title__2tk_T\",\"Timer\":\"TimerRxJS_Timer__2OWm6\",\"Item\":\"TimerRxJS_Item__2ma4v\",\"ControlPanel\":\"TimerRxJS_ControlPanel__1EWQJ\",\"ButtonStart\":\"TimerRxJS_ButtonStart__23yr3\",\"ButtonStop\":\"TimerRxJS_ButtonStop__2MlRJ\",\"ButtonWait\":\"TimerRxJS_ButtonWait__J_Bge\",\"ButtonReset\":\"TimerRxJS_ButtonReset__JBGFz\"};"],"sourceRoot":""}